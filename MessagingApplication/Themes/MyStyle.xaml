<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MessagingApplication" xmlns:System="clr-namespace:System;assembly=System.Runtime"
                    x:Class="MessagingApplication.MyStyle"
                    >

    <!--_______________________ Converter _______________________-->
    <local:HalfHeightToCornerRadiusConverter x:Key="halfHeightConverter"/>

    <!--_______________________ Fonts _______________________-->
    <FontFamily x:Key="MaterialIcons">pack://application:,,,#Material Icons</FontFamily>

    <!--_______________________ Main Values _______________________-->
    <System:Double x:Key="FontSize" >12</System:Double>
    <System:Double x:Key="MaxMessageViewWidth" >500</System:Double>
    <System:Double x:Key="MessageCounterSize" >18</System:Double>

    <!--_______________________ Colors _______________________-->
    <SolidColorBrush x:Key="Messages.TextColor">#333</SolidColorBrush>
    <SolidColorBrush x:Key="Messages.ReceivedBack">WhiteSmoke</SolidColorBrush>
    <SolidColorBrush x:Key="Messages.SendedBack">#B8FFC1</SolidColorBrush>
    <SolidColorBrush x:Key="Messages.SelectionBorder">#09f</SolidColorBrush>

    <SolidColorBrush x:Key="WindowButtonIcons.Text">#999</SolidColorBrush>
    <SolidColorBrush x:Key="WindowButtonIcons.Hover">#eee</SolidColorBrush>
    <SolidColorBrush x:Key="WindowButtonIcons.Pressed">#ddd</SolidColorBrush>

    <SolidColorBrush x:Key="Window.Border">#bbb</SolidColorBrush>
    <SolidColorBrush x:Key="Window.Background">#fff</SolidColorBrush>

    <SolidColorBrush x:Key="Textbox.Background">#eee</SolidColorBrush>
    <SolidColorBrush x:Key="Textbox.BorderNormal">#eee</SolidColorBrush>
    <SolidColorBrush x:Key="Textbox.TextColor">#333</SolidColorBrush>
    <SolidColorBrush x:Key="Textbox.PlaceholderColor">gray</SolidColorBrush>
    <SolidColorBrush x:Key="Textbox.Hover">#E9E9E9</SolidColorBrush>
    <SolidColorBrush x:Key="Textbox.FocusedBorderColor">#09f</SolidColorBrush>

    <SolidColorBrush x:Key="CTA.TextColor">#fff</SolidColorBrush>
    <!--<SolidColorBrush x:Key="CTA.Normal">#09f</SolidColorBrush>-->
    <LinearGradientBrush x:Key="CTA.Normal">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#00B9FF" Offset="0"/>
            <GradientStop Color="#006FFF" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="CTA.Hover">#1af</SolidColorBrush>
    <SolidColorBrush x:Key="CTA.Pressed">#08e</SolidColorBrush>

    <SolidColorBrush x:Key="UserListView.Normal">Transparent</SolidColorBrush>
    <SolidColorBrush x:Key="UserListView.TextColor">#333</SolidColorBrush>
    <!--<SolidColorBrush x:Key="UserListView.MessageCounter">Lime</SolidColorBrush>-->
    <LinearGradientBrush x:Key="UserListView.MessageCounter">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#00FF9F" Offset="0"/>
            <GradientStop Color="#00CBFF" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <!--<SolidColorBrush x:Key="UserListView.Hover">#efefef</SolidColorBrush>-->
    <LinearGradientBrush x:Key="UserListView.Hover">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#fff" Offset="0"/>
            <GradientStop Color="#EFEFEF" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="UserListView.Selected">#ECECEC</SolidColorBrush>

    <SolidColorBrush x:Key="IconButton.Back">Transparent</SolidColorBrush>
    <SolidColorBrush x:Key="IconButton.Icon">#09f</SolidColorBrush>
    <SolidColorBrush x:Key="IconButton.Hover">Gainsboro</SolidColorBrush>
    <SolidColorBrush x:Key="IconButton.Pressed">LightGray</SolidColorBrush>
    
    
    <!--_______________________ Message View Style _______________________-->
    <Style TargetType="{x:Type local:MessageView}">
        <Setter Property="Padding" Value="10,7" />
        <Setter Property="Margin" Value="10,3,10,0" />
        <Setter Property="Foreground" Value="{DynamicResource Messages.TextColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MessageView}">
                    <Grid Background="Transparent" x:Name="back">
                        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="6"
                            MaxWidth="{StaticResource MaxMessageViewWidth}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            
                            <TextBlock 
                                FontSize="{TemplateBinding FontSize}"
                                FontFamily="{TemplateBinding FontFamily}"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{TemplateBinding Content}"
                                TextWrapping="Wrap"
                                />

                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource Messages.SelectionBorder}" />
                            <Setter Property="BorderThickness" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="MessageType" Value="FromOthers">
                <Setter Property="Background" Value="{DynamicResource Messages.ReceivedBack}" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
            </Trigger>

            <Trigger Property="MessageType" Value="Sended">
                <Setter Property="Background" Value="{DynamicResource Messages.SendedBack}" />
                <Setter Property="HorizontalContentAlignment" Value="Right" />


            </Trigger>
        </Style.Triggers>
    </Style>

    <!--_______________________ Window Title Buttons Style _______________________-->
    <Style TargetType="Button" x:Key="WindowTitleButtonsStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource WindowButtonIcons.Text}" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialIcons}" />
        <Setter Property="FontSize" Value="17" />
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource WindowButtonIcons.Hover}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource WindowButtonIcons.Pressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--_______________________ Window Style _______________________-->
    <Style TargetType="local:MyStyleWindow">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="AllowsTransparency" Value="True" />
        
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource Window.Border}" />
        <Setter Property="Background" Value="{DynamicResource Window.Background}" />

        <Setter Property="MaxHeight" Value="{x:Static SystemParameters.MaximizedPrimaryScreenHeight}" />
        
        <EventSetter Event="Loaded" Handler="Window_Loaded"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:MyStyleWindow">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid Background="Transparent" MouseDown="TitleBar_MouseDown" Height="{TemplateBinding TitleBarHeight}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                
                                <ContentPresenter Content="{TemplateBinding TitleBarContent}"/>
                                
                                <StackPanel Orientation="Horizontal" Grid.Column="1">
                                    <Button Content="minimize" Style="{StaticResource WindowTitleButtonsStyle}" Click="Minimize_Button"/>
                                    <Button Content="crop_square" Style="{StaticResource WindowTitleButtonsStyle}" Click="Maxmize_Clicked" x:Name="maxButton"/>
                                    <Button Content="close" Style="{StaticResource WindowTitleButtonsStyle}" Click="Close_Clicked"/>
                                </StackPanel>
                            </Grid>
                            <ContentPresenter Grid.Row="1"/>
                            <ResizeGrip Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Content" Value="" TargetName="maxButton" />
                            <Setter Property="Padding" Value="7.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--_______________________ Textbox With Placeholder _______________________-->
    <Style TargetType="local:TextboxWithPlaceHolder">
        <Setter Property="Background" Value="{DynamicResource Textbox.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource Messages.TextColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource Textbox.BorderNormal}" />
        <Setter Property="Placeholder" Value="test" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MaxLines" Value="3" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:TextboxWithPlaceHolder">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="18"
                            Padding="15,10" 
                            Cursor="IBeam">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" 
                                      HorizontalContentAlignment="Left"
                                      VerticalContentAlignment="Center"
                                      >
                            </ScrollViewer>
                            <TextBlock Text="{TemplateBinding Placeholder}" 
                                       HorizontalAlignment="Left" 
                                       VerticalAlignment="Center" 
                                       Margin="3,0"
                                       Foreground="{DynamicResource Textbox.PlaceholderColor}"
                                       Visibility="Collapsed"
                                       x:Name="placeholder"
                                       />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--Placeholder show hide-->
                        <Trigger Property="Text" Value="">
                            <Setter Property="Visibility" Value="Visible" TargetName="placeholder"/>
                        </Trigger>
                        
                        <!--mouse over (hover)-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsFocused" Value="false"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{DynamicResource Textbox.Hover}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        
                        <!--focused blue borders-->
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource Textbox.FocusedBorderColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--_______________________ Icon Text Button _______________________-->
    <Style TargetType="local:IconTextButton">
        <Setter Property="Background" Value="{DynamicResource CTA.Normal}" />
        <Setter Property="Foreground" Value="{DynamicResource CTA.TextColor}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="20,10,15,10" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IconName" Value="" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:IconTextButton">
                    <Border Padding="{TemplateBinding Padding}" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="{Binding Converter={StaticResource halfHeightConverter},RelativeSource={RelativeSource Mode=TemplatedParent},Path=ActualHeight}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <TextBlock 
                                Grid.Column="1"
                                Text="{TemplateBinding IconName}"
                                FontFamily="{StaticResource MaterialIcons}"
                                FontSize="17"
                                VerticalAlignment="Center"
                                Foreground="{TemplateBinding Foreground}"
                                Margin="15,0,0,-1"
                                x:Name="icon"
                                />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IconName" Value="">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="icon"/>
                        </Trigger>
                        <Trigger Property="Content" Value="">
                            <Setter Property="Margin" Value="0" TargetName="icon"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource CTA.Hover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource CTA.Pressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--_______________________ User List View Item _______________________-->
    <Style TargetType="local:UserListViewItem">
        <Setter Property="Padding" Value="15,10,20,10" />
        <Setter Property="Background" Value="{DynamicResource UserListView.Normal}" />
        <Setter Property="Foreground" Value="{DynamicResource UserListView.TextColor}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:UserListViewItem">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <Grid MinHeight="40">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40" />
                                <ColumnDefinition Width="15" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter Content="{TemplateBinding ProfileContent}"/>

                            <ContentPresenter Grid.Column="2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>

                            <Border x:Name="messageCounter" 
                                    Grid.Column="5" 
                                    Height="{StaticResource MessageCounterSize}" 
                                    Background="{DynamicResource UserListView.MessageCounter}" 
                                    Padding="6,0" 
                                    CornerRadius="{Binding Converter={StaticResource halfHeightConverter},Path=ActualHeight,RelativeSource={RelativeSource Mode=Self}}">

                                <TextBlock 
                                    Text="{TemplateBinding MessagesCount}"
                                    FontSize="{StaticResource FontSize}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="White"
                                    />
                            </Border>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource UserListView.Hover}" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource UserListView.Selected}"/>
                        </Trigger>

                        <Trigger Property="MessagesCount" Value="0">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="messageCounter" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>

                        <Trigger Property="MessagesCount" Value="">
                            <Setter Property="Width" Value="{StaticResource MessageCounterSize}" TargetName="messageCounter" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--_______________________ Icon Button _______________________-->
    <Style x:Key="IconButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource IconButton.Back}" />
        <Setter Property="Foreground" Value="{DynamicResource IconButton.Icon}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialIcons}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    
                    <Grid x:Name="sc">
                        
                        <Ellipse Fill="{TemplateBinding Background}" Width="{TemplateBinding ActualHeight}"/>

                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource IconButton.Hover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">

                            <Setter Property="Background" Value="{DynamicResource IconButton.Pressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>